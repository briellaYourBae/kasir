/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package toko;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author LAB RPL 2
 */
public class formDatabarang extends javax.swing.JFrame {
    Connection conn;
    Statement stm;
    String sql;
    private Object statement;
    private boolean isLoggedIn = false;
    private String userRole = "";

    


    
    public formDatabarang() {
        initComponents();
if (userRole.equals("kasir")) {
        // Menyembunyikan tombol untuk menambah, mengupdate, dan menghapus data
        btnadd.setVisible(false);
        btnupdate.setVisible(false);
        delete.setVisible(false);

        // Menonaktifkan field input untuk mengedit data
        kode_barang.setEnabled(false);
        nama_barang.setEnabled(false);
        harga_barang.setEnabled(false);
        stok.setEnabled(false);
    }
        
        setTitle("Form data barang");
        setLocationRelativeTo(null);
        try{
            conn = Config.configDB();
            stm = conn.createStatement();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"error brayy" + e.getMessage());
        }
            loadData();
            kosong();
    }
    
    private void kosong(){
        kode_barang.setText(null);
        nama_barang.setText(null);
        harga_barang.setText(null);
        stok.setText(null);
        
        
    }
    private void SetDataBarang() {
      //  untuk menyimpan data tabel
    DefaultTableModel tableModel = new DefaultTableModel();
    
     // Menambahkan kolom-kolom pada tabel
    tableModel.addColumn("KODE BARANG");
    tableModel.addColumn("NAMA BARANG");
    tableModel.addColumn("HARGA BARANG");
    tableModel.addColumn("KETERANGAN");
    tableModel.addColumn("STOK");

    try {
        // Menggunakan objek Connection dari konfigurasi database
        Connection conn = Config.configDB();
        
        // Membuat objek Statement untuk menjalankan query
        Statement stm = conn.createStatement();

            //mengambil semua data dari tabel tbl_databarang
        String query = "SELECT * FROM barang";
        // menjalankan query dan menyimpan hasilnya dalam objek ResultSet
        ResultSet rs = stm.executeQuery(query);

            // perulangan untuk mengambil setiap baris data dari ResultSet
        while (rs.next()) {
            // mengambil nilai dari setiap kolom pada baris saat ini
            int kodeBarang = rs.getInt("kode_barang");
            String namaBarang = rs.getString("nama_barang");
            String hargaBarang = rs.getString("harga_barang");
            String keterangan = rs.getString("keterangan");
            String stok = rs.getString("stok");

            // Membuat array objek untuk menyimpan data pada setiap baris
            Object[] tbData = {kodeBarang, namaBarang, hargaBarang, keterangan, stok};
            
            // Menambahkan baris data ke dalam tabel
            tableModel.addRow(tbData);
        }
    } catch (SQLException ex) {
        // Menangani kesalahan SQL jika terjadi
        JOptionPane.showMessageDialog(null, ex.getMessage());
    }
    // Menetapkan model tabel ke tabel yang digunakan
    tabel.setModel(tableModel);
}
    
    private void loadData() {
    DefaultTableModel tableModel = new DefaultTableModel();
    tableModel.addColumn("KODE BARANG");
    tableModel.addColumn("NAMA BARANG");
    tableModel.addColumn("HARGA BARANG");
    tableModel.addColumn("STOK");

    try {
        // Menggunakan objek Connection dari konfigurasi database
        Connection conn = Config.configDB();
        Statement stm = conn.createStatement();

        String query = "SELECT * FROM barang";
        ResultSet rs = stm.executeQuery(query);

        while (rs.next()) {
            int kodeBarang = rs.getInt("kode_barang");
            String namaBarang = rs.getString("nama_barang");
            String hargaBarang = rs.getString("harga_barang");
            String stok = rs.getString("stok");

            Object[] tbData = {kodeBarang, namaBarang, hargaBarang, stok};
            tableModel.addRow(tbData);
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, ex.getMessage());
    }

    tabel.setModel(tableModel);
}
    /**
     * Creates new form formDatabarang
     */
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        kode_barang = new javax.swing.JTextField();
        nama_barang = new javax.swing.JTextField();
        harga_barang = new javax.swing.JTextField();
        stok = new javax.swing.JTextField();
        btnadd = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        txtsearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(java.awt.Color.black);
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(204, 0, 204));
        jLabel1.setFont(new java.awt.Font("MV Boli", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 204));
        jLabel1.setText("DATA BARANG");

        jLabel2.setForeground(new java.awt.Color(204, 0, 204));
        jLabel2.setText("KODE BARANG");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setForeground(new java.awt.Color(204, 0, 204));
        jLabel3.setText("NAMA BARANG");

        jLabel4.setForeground(new java.awt.Color(204, 0, 204));
        jLabel4.setText("HARGA BARANG");

        jLabel5.setForeground(new java.awt.Color(204, 0, 204));
        jLabel5.setText("STOK");

        harga_barang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                harga_barangActionPerformed(evt);
            }
        });

        stok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stokActionPerformed(evt);
            }
        });

        btnadd.setText("Add");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jButton5.setText("Close");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Search");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"asep", "rtgrt4", "4g", null}
            },
            new String [] {
                "nama", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabel);

        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nama_barang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(kode_barang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(222, 222, 222)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(stok, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                                    .addComponent(harga_barang, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnadd)
                                .addGap(18, 18, 18)
                                .addComponent(btnupdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(delete)
                                .addGap(27, 27, 27)
                                .addComponent(jButton5)
                                .addGap(101, 101, 101)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton6)
                                    .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(130, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(281, 281, 281))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(kode_barang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nama_barang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(harga_barang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(stok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnadd)
                    .addComponent(btnupdate)
                    .addComponent(delete)
                    .addComponent(jButton5)
                    .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stokActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stokActionPerformed

    private void harga_barangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_harga_barangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_harga_barangActionPerformed

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
                              
   
    try {
        // Memasukkan data ke tbl_databarang
        String sql = "INSERT INTO barang (kode_barang, nama_barang, harga_barang, stok,) "
                   + "VALUES ('" + kode_barang.getText() + "', '" + nama_barang.getText() + "', '" + harga_barang.getText() + "', '" + stok.getText() + "');";
        // Mengeksekusi pernyataan SQL yang telah disiapkan sebelumnya.
        PreparedStatement preparedStatement = conn.prepareStatement(sql);
        // Mengeksekusi pernyataan SQL yang telah disiapkan.
        preparedStatement.execute();
        // Berhasil
        JOptionPane.showMessageDialog(null, "Data Berhasil ditambahkan!");

        // Memuat ulang data di tabel
        loadData();
        kosong();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }




     
        // TODO add your handling code here:
    }//GEN-LAST:event_btnaddActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
   
    
   
    try {
        // Mengambil nilai kode_barang dari baris yang akan diupdate
        int kodeBarangSelected = Integer.parseInt(kode_barang.getText());

        String sql = "UPDATE barang "
                + "SET nama_barang = ?, harga_barang = ?, stok = ? "
                + "WHERE kode_barang = ?";
        PreparedStatement preparedStatement = conn.prepareStatement(sql);
        preparedStatement.setString(1, nama_barang.getText());
        preparedStatement.setString(2, harga_barang.getText());
        preparedStatement.setString(3, stok.getText());
        preparedStatement.setInt(4, kodeBarangSelected);
        preparedStatement.executeUpdate();

        JOptionPane.showMessageDialog(null, "Data Berhasil diubah");

        // Memuat ulang data di tabel
        loadData();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "error: " + e.getMessage());
    }



        // TODO add your handling code here:
    }//GEN-LAST:event_btnupdateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
                                               
    // Mendapatkan indeks baris yang dipilih pada JTable
    int selectedRow = tabel.getSelectedRow();

    // Memastikan bahwa baris telah dipilih
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Please select a row to delete.");
        return;
    }

    // Mendapatkan kode barang dari baris yang dipilih
    int kodeBarang = (int) tabel.getValueAt(selectedRow, 0);

    // Konfirmasi penghapusan dengan dialog
    int confirmation = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the selected item?", "Confirmation", JOptionPane.YES_NO_OPTION);
    
    // Jika pengguna menyetujui penghapusan
    if (confirmation == JOptionPane.YES_OPTION) {
        try {
            // Mendapatkan koneksi ke database
            Connection conn = Config.configDB();
            
            // Query untuk menghapus item dari database berdasarkan kode barang
            String sql = "DELETE FROM barang WHERE kode_barang = ?";
            
            // Persiapan statement SQL
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            preparedStatement.setInt(1, kodeBarang);
            
            // Menjalankan pernyataan SQL untuk menghapus item
            preparedStatement.executeUpdate();

            // Menampilkan pesan sukses
            JOptionPane.showMessageDialog(null, "Item deleted successfully!");

            // Memuat ulang data di tabel untuk memperbarui tampilan
            loadData();
        } catch (SQLException e) {
            // Menangani kesalahan SQL jika terjadi
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    
}                                       
    

    

    }//GEN-LAST:event_deleteActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        AdminHome.main(null);
          dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formDatabarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formDatabarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formDatabarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formDatabarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formDatabarang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnupdate;
    private javax.swing.JButton delete;
    private javax.swing.JTextField harga_barang;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField kode_barang;
    private javax.swing.JTextField nama_barang;
    private javax.swing.JTextField stok;
    private javax.swing.JTable tabel;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
