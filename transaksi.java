/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package toko;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.NumberFormat;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class transaksi extends javax.swing.JFrame {

    /**
     * Creates new form transaksi
     */
    ResultSet rs;
    Connection conn;
    Statement stmt;

    public transaksi() {
        initComponents();

        total_harga.setEnabled(false);
        txt_kembalian.setEnabled(false);

        tbl_transaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TblTransaksiMouseClicked(evt);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        total_barang = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_transaksi = new javax.swing.JTable();
        btn_tambah = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();
        kode_barang = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        total_harga = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btn_hitung = new javax.swing.JButton();
        txt_bayar = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_kembalian = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(java.awt.Color.black);

        jLabel2.setFont(new java.awt.Font("Sitka Text", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 255));
        jLabel2.setText("Transaksi");

        jLabel3.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 255));
        jLabel3.setText("Total Barang");

        tbl_transaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode", "Nama Barang", "Harga Barang", "Total Barang"
            }
        ));
        jScrollPane1.setViewportView(tbl_transaksi);

        btn_tambah.setBackground(java.awt.Color.black);
        btn_tambah.setForeground(new java.awt.Color(255, 0, 255));
        btn_tambah.setText("Tambah");
        btn_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tambahActionPerformed(evt);
            }
        });

        btn_hapus.setBackground(java.awt.Color.black);
        btn_hapus.setForeground(new java.awt.Color(255, 0, 255));
        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 255));
        jLabel1.setText("Kode Barang");

        jLabel4.setForeground(new java.awt.Color(255, 0, 255));
        jLabel4.setText("Total harga");

        btn_hitung.setForeground(new java.awt.Color(255, 0, 255));
        btn_hitung.setText("Hitung");
        btn_hitung.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 255)));
        btn_hitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hitungActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(255, 0, 255));
        jLabel5.setText("Bayar");

        jLabel6.setForeground(new java.awt.Color(255, 0, 255));
        jLabel6.setText("Kembalian");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 822, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(180, 180, 180)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(kode_barang)
                                            .addComponent(total_barang, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)))
                                    .addComponent(jLabel3))
                                .addGap(175, 175, 175)
                                .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 465, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_kembalian, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                            .addComponent(txt_bayar)
                            .addComponent(total_harga))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_hitung)
                        .addGap(84, 84, 84))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel2)
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(kode_barang, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(total_barang, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(total_harga, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_hitung))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_bayar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_kembalian, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tambahActionPerformed
        // TODO add your handling code here:
        String kodeBarang = kode_barang.getText().trim();
        String totalBarangText = total_barang.getText().trim();

        int totalBarang = 0;
        try {
            totalBarang = Integer.parseInt(totalBarangText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Total Barang harus berupa angka");
            return;
        }

        if (kodeBarang.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Kode Barang tidak boleh kosong");
            return;
        }

        String sql = "SELECT * FROM barang WHERE kode_barang = ?";

        try (Connection conn = Config.configDB(); PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, kodeBarang);
            ResultSet rs = pstmt.executeQuery();

            DefaultTableModel tableModel = (DefaultTableModel) tbl_transaksi.getModel();
            boolean itemFound = false;
            boolean dataFoundInDatabase = false;
            int stockAvailable = 0;

            while (rs.next()) {
                dataFoundInDatabase = true;
                String namaBarang = rs.getString("nama_barang");
                String hargaBarang = rs.getString("harga_barang");
                stockAvailable = rs.getInt("stok");

                for (int i = 0; i < tableModel.getRowCount(); i++) {
                    Object existingKodeBarangObj = tableModel.getValueAt(i, 0);
                    Object existingTotalBarangObj = tableModel.getValueAt(i, 2);

                    String existingKodeBarang = existingKodeBarangObj != null ? existingKodeBarangObj.toString() : "";
                    int existingTotalBarang = existingTotalBarangObj != null ? Integer.parseInt(existingTotalBarangObj.toString()) : 0;

                    if (existingKodeBarang.equals(kodeBarang)) {
                        if (totalBarang + existingTotalBarang > stockAvailable) {
                            JOptionPane.showMessageDialog(null, "Jumlah barang melebihi stok yang tersedia");
                            clear();
                            return;
                        }
                        tableModel.setValueAt(existingTotalBarang + totalBarang, i, 2);
                        itemFound = true;
                        break;
                    }
                }

                if (!itemFound) {
                    if (totalBarang > stockAvailable) {
                        JOptionPane.showMessageDialog(null, "Jumlah barang melebihi stok yang tersedia");
                        clear();
                        return;
                    }
                    tableModel.addRow(new Object[]{
                        kodeBarang,
                        namaBarang,
                        hargaBarang,
                        totalBarang
                    });
                }
            }

            if (!dataFoundInDatabase) {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan di database");
            } else if (itemFound) {
                JOptionPane.showMessageDialog(null, "Jumlah barang diperbarui");
            } else {
                JOptionPane.showMessageDialog(null, "Data ditemukan dan ditambahkan");
            }

            tbl_transaksi.setModel(tableModel);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }

        clear();
    }//GEN-LAST:event_btn_tambahActionPerformed

    private void btn_hitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hitungActionPerformed
        // TODO add your handling code here:
        totalHargaBarang();
    }//GEN-LAST:event_btn_hitungActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        // TODO add your handling code here:
        String kodeBarangToDelete = kode_barang.getText().trim();

        if (kodeBarangToDelete.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Kode Barang tidak boleh kosong");
            clear();
            return;
        }

        DefaultTableModel tableModel = (DefaultTableModel) tbl_transaksi.getModel();
        boolean rowRemoved = false;

        for (int i = 0; i < tableModel.getRowCount(); i++) {
            String kodeBarangInTable = tableModel.getValueAt(i, 0).toString();

            if (kodeBarangInTable.equals(kodeBarangToDelete)) {
                tableModel.removeRow(i);
                rowRemoved = true;
                break;
            }
        }

        if (rowRemoved) {
            JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus dari Tabel!");
        } else {
            JOptionPane.showMessageDialog(null, "Data dengan Kode Barang tidak ditemukan");
        }

        clear();
    }//GEN-LAST:event_btn_hapusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transaksi().setVisible(true);
            }
        });
    }

    private void clear() {
        kode_barang.setText("");
        total_barang.setText("");
    }

    private void totalHargaBarang() {
        DefaultTableModel tableModel = (DefaultTableModel) tbl_transaksi.getModel();

        double totalPrice = 0;

        for (int i = 0; i < tableModel.getRowCount(); i++) {
            Object kodeBarangObj = tableModel.getValueAt(i, 0);
            Object hargaBarangObj = tableModel.getValueAt(i, 2);
            Object totalBarangObj = tableModel.getValueAt(i, 3);

            if (hargaBarangObj != null && totalBarangObj != null) {
                try {
                    double hargaBarang = Double.parseDouble(hargaBarangObj.toString());
                    int totalBarang = Integer.parseInt(totalBarangObj.toString());
                    String kodeBarang = String.valueOf(kodeBarangObj);

                    totalPrice += hargaBarang * totalBarang;

                    // Update stok barang
                    updateStok(kodeBarang, totalBarang);

                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Error in data format: " + e.getMessage());
                    return;
                }
            }
        }

        // Perhitungan kembalian dilakukan setelah semua item diproses
        double bayar = 0;
        try {
            bayar = Double.parseDouble(txt_bayar.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid payment amount: " + e.getMessage());
            return;
        }

        double kembalian = bayar - totalPrice;

        NumberFormat currencyFormat = NumberFormat.getCurrencyInstance(new Locale("id", "ID"));
        String formattedChange = currencyFormat.format(kembalian);
        String formattedTotalPrice = currencyFormat.format(totalPrice);

        total_harga.setText(formattedTotalPrice);
        txt_kembalian.setText(formattedChange);

        if (kembalian < 0) {
            JOptionPane.showMessageDialog(null, "Duit bayar kurang");
        }
    }

    private void TblTransaksiMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int selectedRow = tbl_transaksi.getSelectedRow();
        if (selectedRow != -1) {
            String kodeBarang = tbl_transaksi.getValueAt(selectedRow, 0).toString();
            String totalBarang = tbl_transaksi.getValueAt(selectedRow, 2).toString();

            kode_barang.setText(kodeBarang);
            total_barang.setText(totalBarang);
        }
    }

    private void updateStok(String kodeBarang, int totalBarang) {
        try (Connection conn = Config.configDB(); PreparedStatement statement = conn.prepareStatement("UPDATE barang SET stok = stok - ? WHERE kode_barang = ?")) {
            statement.setInt(1, totalBarang);
            statement.setString(2, kodeBarang);
            statement.executeUpdate();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error updating stock: " + e.getMessage());
        }
    }

    private void loadData() {
        String sql = "SELECT kode_barang, nama_barang, harga_barang FROM barang";

        try (Connection conn = Config.configDB(); PreparedStatement pstmt = conn.prepareStatement(sql); ResultSet rs = pstmt.executeQuery()) {

            DefaultTableModel tableModel = (DefaultTableModel) tbl_transaksi.getModel();

            Map<String, Integer> existingRows = new HashMap<>();
            for (int i = 0; i < tableModel.getRowCount(); i++) {
                String kodeBarang = tableModel.getValueAt(i, 0).toString();
                int totalBarang = Integer.parseInt(tableModel.getValueAt(i, 2).toString());
                existingRows.put(kodeBarang, totalBarang);
            }

            DefaultTableModel newTableModel = new DefaultTableModel();
            newTableModel.addColumn("Kode Barang");
            newTableModel.addColumn("Nama Barang");
            newTableModel.addColumn("Harga Barang");
            newTableModel.addColumn("Total Barang");

            while (rs.next()) {
                String kodeBarang = rs.getString("kode_barang");
                String namaBarang = rs.getString("nama_barang");
                String hargaBarang = rs.getString("harga_barang");

                int totalBarang = existingRows.getOrDefault(kodeBarang, 0);

                newTableModel.addRow(new Object[]{
                    kodeBarang,
                    namaBarang,
                    hargaBarang,
                    totalBarang
                });

                existingRows.remove(kodeBarang);
            }
            tbl_transaksi.setModel(newTableModel);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_hitung;
    private javax.swing.JButton btn_tambah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField kode_barang;
    private javax.swing.JTable tbl_transaksi;
    private javax.swing.JTextField total_barang;
    private javax.swing.JTextField total_harga;
    private javax.swing.JTextField txt_bayar;
    private javax.swing.JTextField txt_kembalian;
    // End of variables declaration//GEN-END:variables
}
